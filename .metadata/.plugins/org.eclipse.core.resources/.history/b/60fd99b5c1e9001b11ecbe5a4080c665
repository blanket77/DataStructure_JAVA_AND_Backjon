package upgrade;

class SingleLinkedList{
	Node header;
	
	SingleLinkedList() {
		header = new Node();
	}
	


	void append(int d)
	{
		Node end = new Node(d);
		Node n = header;
		while(n.next != null)
			n = n.next;
		n.next = end;
	}
	
	void delete(int d){
		Node n = header;
		while(n.next !=null){
			if(n.next.data ==d){
				n.next = n.next.next;
				break;
			}
			n = n.next;
		}
	}
	
	boolean retrieve() {
		if(header.next == null)
		{
			System.out.println("data is not!!");
			return false;
		}
		Node n = header.next;
		while(n.next != null) {
			System.out.print(n.data+ " => ");
			n = n.next;
			}
		System.out.println(n.data);
		return true;	
	}
	
	boolean deleteDup() {
		if(header.next==null) {
			System.out.println("data is not!!");
			return false;
		}
		Node n = header.next;
		while(n != null && n.next != null) {
			Node r = n;
			while(r.next != null) {
				if(n.data == r.next.data) {
					r.next = r.next.next;
				}
				else {
					r = r.next;
				}
			}
			n = n.next;
		}
		return true;
	}
	
	Node getFirst()
	{
		if(header.next==null) {
			System.out.println("data is not!!");
			return null;
		}
		return header.next;
	}
}